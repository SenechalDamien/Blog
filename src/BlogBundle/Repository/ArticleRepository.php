<?php

namespace BlogBundle\Repository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository
{
	public function findArticlesNonLus($user) {
		//$query = $this->getEntityManager()->createQuery("SELECT a FROM BlogBundle:Article a WHERE a NOT IN (SELECT u.articles_marques FROM BlogBundle:User u where u.id = ?1)");
		$query = $this->getEntityManager()->createQuery("
			SELECT a FROM BlogBundle:Article a
			WHERE a not in (
			SELECT am from BlogBundle:User u
			JOIN u.articles_marques am where u = :user)");
			//JOIN a.marques_par_users u WITH u = :user");
		$query->setParameter('user', $user);
		$articles = $query->execute();
		//var_dump($articles);
		return $articles;
	}

    public function findArticlesCritique($user) {
        $currentDate =  new \DateTime('now');
        $Date = date('c', strtotime('-30 days'));
        $query = $this->getEntityManager()->createQuery("
			SELECT a FROM BlogBundle:Article a
			WHERE a not in (
			SELECT am from BlogBundle:User u
			JOIN u.articles_marques am where u = :user)
			AND a.datePublication > :date
			");
        //JOIN a.marques_par_users u WITH u = :user");
        $query->setParameter('user', $user);
        $query->setParameter('date', $Date);
        $articles = $query->execute();
        //var_dump($articles);
        return $articles;
    }

	public function findArticlesWithTitleOrAuthor($regex)
	{
		$query = $this->getEntityManager()->createQuery("
			SELECT a FROM BlogBundle:Article a
			JOIN a.ecritPar u
			WHERE a.titre like :regex 
			OR u.username like :regex");
		$query->setParameter('regex', '%'.$regex.'%');
		$articles = $query->execute();
		//var_dump($articles);
		return $articles;
	}
}
